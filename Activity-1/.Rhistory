gc()
source("~/pendulum-project/pendulum.R")
source("~/pendulum-project/pendulum.R")
# check if the number of terms is valid
if(nterms <= 0) {
print("Plese enter a positive integer")
} else {
if(nterms == 1) {
print("Fibonacci sequence:")
print(n1)
} else {
print("Fibonacci sequence:")
print(n1)
print(n2)
while(count < nterms) {
nth = n1 + n2
print(nth)
# update values
n1 = n2
n2 = nth
count = count + 1
}
}
}
source("~/heart-disease-detection/Activity-1/pendulum.R")
source("~/heart-disease-detection/Activity-2/k-clustering.R")
library(factoextra)
library(readr)
#load data
heart <- read_csv("./heart.csv")
#scale data
heart_scale <- scale(heart[1:13])
#View(heart_scale)
#distance
heart_dist <- dist(heart_scale)
#heart_dist
#calculate number of clusters
(fviz_nbclust(heart_scale, kmeans , method = "wss" ) +
labs(subtitle = "Elbow method"))
km.out <- kmeans(heart_scale,centers = 5 ,nstart = 100)
print(km.out)
#results
km.clusters <- km.out$cluster
fig <- fviz_cluster(list(data = heart_scale, cluster = km.clusters))
plot(fig)
